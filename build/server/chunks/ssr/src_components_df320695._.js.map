{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/hhoburg/archenemy/frontend/src/components/common/CardCard.tsx"],"sourcesContent":["import React from \"react\";\nimport { Card, Image, Button, Group } from \"@mantine/core\";\n\ninterface CardCardProps {\n  imageUrl: string;\n  buttonText?: string;\n  onButtonClick?: () => void;\n}\n\nconst CardCard: React.FC<CardCardProps> = ({\n  imageUrl,\n  buttonText,\n  onButtonClick,\n}) => {\n  return (\n    <Card style={{ width: 357, height: 700 }}>\n      <Card.Section>\n        <Image src={imageUrl} alt=\"Card Image\" style={{ maxWidth: \"100%\" }} />\n      </Card.Section>\n      {buttonText && onButtonClick && (\n        <Button size=\"small\" mt=\"md\" fullWidth onClick={onButtonClick}>\n          {buttonText}\n        </Button>\n      )}\n    </Card>\n  );\n};\n\nexport default CardCard;\n"],"names":[],"mappings":";;;;;AACA;AAAA;AAAA;;;AAQA,MAAM,WAAoC,CAAC,EACzC,QAAQ,EACR,UAAU,EACV,aAAa,EACd;IACC,qBACE,8OAAC,+KAAI;QAAC,OAAO;YAAE,OAAO;YAAK,QAAQ;QAAI;;0BACrC,8OAAC,+KAAI,CAAC,OAAO;0BACX,cAAA,8OAAC,kLAAK;oBAAC,KAAK;oBAAU,KAAI;oBAAa,OAAO;wBAAE,UAAU;oBAAO;;;;;;;;;;;YAElE,cAAc,+BACb,8OAAC,qLAAM;gBAAC,MAAK;gBAAQ,IAAG;gBAAK,SAAS;gBAAC,SAAS;0BAC7C;;;;;;;;;;;;AAKX;uCAEe","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/hhoburg/archenemy/frontend/src/components/home/index.tsx"],"sourcesContent":["\"use client\";\n// import { fetchSingleCard, test } from \"~/store/actions/cards\";\n// TODO: figure out absolute imports\nimport CardCard from \"../common/CardCard\";\nimport { Box, Button, Grid, Image, Title, Stack } from \"@mantine/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchAllArchenemyCards,\n  chooseSingleCard,\n  abandonScheme,\n} from \"src/store/reducers\";\nimport { Carousel } from \"@mantine/carousel\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const currentCard = useSelector((state) => state.cards.currentCard);\n  const previousCards = useSelector((state) => state.cards.previousCards);\n  const ongoingCards = useSelector((state) => state.cards.ongoingCards);\n\n  useEffect(() => {\n    dispatch(fetchAllArchenemyCards());\n  }, []);\n\n  useEffect(() => {\n    console.log(\"currentCard\", currentCard);\n  }, [currentCard]);\n\n  return (\n    <Grid>\n      <Grid.Col span={4}>\n        <Image src={currentCard.image_uris?.normal} />\n        <Button mt=\"md\" onClick={() => dispatch(chooseSingleCard())}>\n          Play {previousCards.length > 0 ? \"New\" : \"A\"} Scheme\n        </Button>\n      </Grid.Col>\n      <Grid.Col span={8}>\n        <Stack>\n          <Box>\n            <Title order={3}>Ongoing Schemes</Title>\n            {ongoingCards.map((card, index) => (\n              <CardCard\n                key={card.id}\n                imageUrl={card.image_uris?.normal}\n                buttonText=\"Abandon Scheme\"\n                onButtonClick={() => dispatch(abandonScheme({ index }))}\n              />\n            ))}\n          </Box>\n          <Box>\n            <div>\n              <Title order={3}>Previous Schemes</Title>\n              <Carousel\n                slideSize=\"200px\"\n                // height={200}\n                slideGap=\"none\"\n                controlsOffset=\"sm\"\n                controlSize={26}\n                withControls\n                withIndicators={false}\n                orientation=\"horizontal\"\n              >\n                {previousCards.map((card) => (\n                  <Carousel.Slide key={card.id}>\n                    <CardCard imageUrl={card.image_uris?.normal} />\n                    {/* <Image src={card.image_uris?.small} /> */}\n                  </Carousel.Slide>\n                ))}\n              </Carousel>\n            </div>\n          </Box>\n        </Stack>\n      </Grid.Col>\n    </Grid>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":";;;;;AACA,iEAAiE;AACjE,oCAAoC;AACpC;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAZA;;;;;;;;AAcA,MAAM,OAAO;IACX,MAAM,WAAW,IAAA,wKAAW;IAC5B,MAAM,cAAc,IAAA,wKAAW,EAAC,CAAC,QAAU,MAAM,KAAK,CAAC,WAAW;IAClE,MAAM,gBAAgB,IAAA,wKAAW,EAAC,CAAC,QAAU,MAAM,KAAK,CAAC,aAAa;IACtE,MAAM,eAAe,IAAA,wKAAW,EAAC,CAAC,QAAU,MAAM,KAAK,CAAC,YAAY;IAEpE,IAAA,kNAAS,EAAC;QACR,SAAS,IAAA,2JAAsB;IACjC,GAAG,EAAE;IAEL,IAAA,kNAAS,EAAC;QACR,QAAQ,GAAG,CAAC,eAAe;IAC7B,GAAG;QAAC;KAAY;IAEhB,qBACE,8OAAC,+KAAI;;0BACH,8OAAC,+KAAI,CAAC,GAAG;gBAAC,MAAM;;kCACd,8OAAC,kLAAK;wBAAC,KAAK,YAAY,UAAU,EAAE;;;;;;kCACpC,8OAAC,qLAAM;wBAAC,IAAG;wBAAK,SAAS,IAAM,SAAS,IAAA,qJAAgB;;4BAAK;4BACrD,cAAc,MAAM,GAAG,IAAI,QAAQ;4BAAI;;;;;;;;;;;;;0BAGjD,8OAAC,+KAAI,CAAC,GAAG;gBAAC,MAAM;0BACd,cAAA,8OAAC,kLAAK;;sCACJ,8OAAC,sKAAG;;8CACF,8OAAC,kLAAK;oCAAC,OAAO;8CAAG;;;;;;gCAChB,aAAa,GAAG,CAAC,CAAC,MAAM,sBACvB,8OAAC,mJAAQ;wCAEP,UAAU,KAAK,UAAU,EAAE;wCAC3B,YAAW;wCACX,eAAe,IAAM,SAAS,IAAA,kJAAa,EAAC;gDAAE;4CAAM;uCAH/C,KAAK,EAAE;;;;;;;;;;;sCAOlB,8OAAC,sKAAG;sCACF,cAAA,8OAAC;;kDACC,8OAAC,kLAAK;wCAAC,OAAO;kDAAG;;;;;;kDACjB,8OAAC,qKAAQ;wCACP,WAAU;wCACV,eAAe;wCACf,UAAS;wCACT,gBAAe;wCACf,aAAa;wCACb,YAAY;wCACZ,gBAAgB;wCAChB,aAAY;kDAEX,cAAc,GAAG,CAAC,CAAC,qBAClB,8OAAC,qKAAQ,CAAC,KAAK;0DACb,cAAA,8OAAC,mJAAQ;oDAAC,UAAU,KAAK,UAAU,EAAE;;;;;;+CADlB,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY9C;uCAEe","debugId":null}}]
}